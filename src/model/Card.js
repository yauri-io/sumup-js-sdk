/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Card model module.
 * @module model/Card
 * @version 1.0.0
 */
export class Card {
  /**
   * Constructs a new <code>Card</code>.
   * __Required when payment type is &#x60;card&#x60;.__ Details of the payment card.
   * @alias module:model/Card
   * @class
   * @param name {String} Name of the cardholder as it appears on the payment card.
   * @param _number {String} Number of the payment card (without spaces).
   * @param expiryYear {String} Year from the expiration time of the payment card. Accepted formats are `YY` and `YYYY`.
   * @param expiryMonth {module:model/Card.ExpiryMonthEnum} Month from the expiration time of the payment card. Accepted format is `MM`.
   * @param cvv {String} Three or four-digit card verification value (security code) of the payment card.
   * @param last4Digits {String} Last 4 digits of the payment card number.
   * @param type {module:model/Card.TypeEnum} Issuing card network of the payment card.
   */
  constructor(name, _number, expiryYear, expiryMonth, cvv, last4Digits, type) {
    this.name = name;
    this._number = _number;
    this.expiryYear = expiryYear;
    this.expiryMonth = expiryMonth;
    this.cvv = cvv;
    this.last4Digits = last4Digits;
    this.type = type;
  }

  /**
   * Constructs a <code>Card</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Card} obj Optional instance to populate.
   * @return {module:model/Card} The populated <code>Card</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Card();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('number'))
        obj._number = ApiClient.convertToType(data['number'], 'String');
      if (data.hasOwnProperty('expiry_year'))
        obj.expiryYear = ApiClient.convertToType(data['expiry_year'], 'String');
      if (data.hasOwnProperty('expiry_month'))
        obj.expiryMonth = ApiClient.convertToType(data['expiry_month'], 'String');
      if (data.hasOwnProperty('cvv'))
        obj.cvv = ApiClient.convertToType(data['cvv'], 'String');
      if (data.hasOwnProperty('zip_code'))
        obj.zipCode = ApiClient.convertToType(data['zip_code'], 'String');
      if (data.hasOwnProperty('last_4_digits'))
        obj.last4Digits = ApiClient.convertToType(data['last_4_digits'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * Name of the cardholder as it appears on the payment card.
 * @member {String} name
 */
Card.prototype.name = undefined;

/**
 * Number of the payment card (without spaces).
 * @member {String} _number
 */
Card.prototype._number = undefined;

/**
 * Year from the expiration time of the payment card. Accepted formats are `YY` and `YYYY`.
 * @member {String} expiryYear
 */
Card.prototype.expiryYear = undefined;

/**
 * Allowed values for the <code>expiryMonth</code> property.
 * @enum {String}
 * @readonly
 */
Card.ExpiryMonthEnum = {
  /**
   * value: "01"
   * @const
   */
  _01: "01",

  /**
   * value: "02"
   * @const
   */
  _02: "02",

  /**
   * value: "03"
   * @const
   */
  _03: "03",

  /**
   * value: "04"
   * @const
   */
  _04: "04",

  /**
   * value: "05"
   * @const
   */
  _05: "05",

  /**
   * value: "06"
   * @const
   */
  _06: "06",

  /**
   * value: "07"
   * @const
   */
  _07: "07",

  /**
   * value: "08"
   * @const
   */
  _08: "08",

  /**
   * value: "09"
   * @const
   */
  _09: "09",

  /**
   * value: "10"
   * @const
   */
  _10: "10",

  /**
   * value: "11"
   * @const
   */
  _11: "11",

  /**
   * value: "12"
   * @const
   */
  _12: "12"
};
/**
 * Month from the expiration time of the payment card. Accepted format is `MM`.
 * @member {module:model/Card.ExpiryMonthEnum} expiryMonth
 */
Card.prototype.expiryMonth = undefined;

/**
 * Three or four-digit card verification value (security code) of the payment card.
 * @member {String} cvv
 */
Card.prototype.cvv = undefined;

/**
 * Required five-digit ZIP code. Applicable only to merchant users in the USA.
 * @member {String} zipCode
 */
Card.prototype.zipCode = undefined;

/**
 * Last 4 digits of the payment card number.
 * @member {String} last4Digits
 */
Card.prototype.last4Digits = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Card.TypeEnum = {
  /**
   * value: "AMEX"
   * @const
   */
  AMEX: "AMEX",

  /**
   * value: "CUP"
   * @const
   */
  CUP: "CUP",

  /**
   * value: "DINERS"
   * @const
   */
  DINERS: "DINERS",

  /**
   * value: "DISCOVER"
   * @const
   */
  DISCOVER: "DISCOVER",

  /**
   * value: "ELO"
   * @const
   */
  ELO: "ELO",

  /**
   * value: "ELV"
   * @const
   */
  ELV: "ELV",

  /**
   * value: "HIPERCARD"
   * @const
   */
  HIPERCARD: "HIPERCARD",

  /**
   * value: "JCB"
   * @const
   */
  JCB: "JCB",

  /**
   * value: "MAESTRO"
   * @const
   */
  MAESTRO: "MAESTRO",

  /**
   * value: "MASTERCARD"
   * @const
   */
  MASTERCARD: "MASTERCARD",

  /**
   * value: "VISA"
   * @const
   */
  VISA: "VISA",

  /**
   * value: "VISA_ELECTRON"
   * @const
   */
  VISA_ELECTRON: "VISA_ELECTRON",

  /**
   * value: "VISA_VPAY"
   * @const
   */
  VISA_VPAY: "VISA_VPAY",

  /**
   * value: "UNKNOWN"
   * @const
   */
  UNKNOWN: "UNKNOWN"
};
/**
 * Issuing card network of the payment card.
 * @member {module:model/Card.TypeEnum} type
 */
Card.prototype.type = undefined;

