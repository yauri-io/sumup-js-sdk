/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The MandatePayload model module.
 * @module model/MandatePayload
 * @version 1.0.0
 */
export class MandatePayload {
  /**
   * Constructs a new <code>MandatePayload</code>.
   * Mandate is passed when a card is to be tokenised
   * @alias module:model/MandatePayload
   * @class
   * @param type {module:model/MandatePayload.TypeEnum} Indicates the mandate type
   * @param userAgent {String} Operating system and web client used by the end user
   */
  constructor(type, userAgent) {
    this.type = type;
    this.userAgent = userAgent;
  }

  /**
   * Constructs a <code>MandatePayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MandatePayload} obj Optional instance to populate.
   * @return {module:model/MandatePayload} The populated <code>MandatePayload</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MandatePayload();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('user_agent'))
        obj.userAgent = ApiClient.convertToType(data['user_agent'], 'String');
      if (data.hasOwnProperty('user_ip'))
        obj.userIp = ApiClient.convertToType(data['user_ip'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
MandatePayload.TypeEnum = {
  /**
   * value: "recurrent"
   * @const
   */
  recurrent: "recurrent"
};
/**
 * Indicates the mandate type
 * @member {module:model/MandatePayload.TypeEnum} type
 */
MandatePayload.prototype.type = undefined;

/**
 * Operating system and web client used by the end user
 * @member {String} userAgent
 */
MandatePayload.prototype.userAgent = undefined;

/**
 * IP address of the end user. Supports IPv4 and IPv6
 * @member {String} userIp
 */
MandatePayload.prototype.userIp = undefined;

