/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The CheckoutCreateRequestPersonalDetailsAddress model module.
 * @module model/CheckoutCreateRequestPersonalDetailsAddress
 * @version 1.0.0
 */
export class CheckoutCreateRequestPersonalDetailsAddress {
  /**
   * Constructs a new <code>CheckoutCreateRequestPersonalDetailsAddress</code>.
   * Payer&#x27;s address information
   * @alias module:model/CheckoutCreateRequestPersonalDetailsAddress
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>CheckoutCreateRequestPersonalDetailsAddress</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CheckoutCreateRequestPersonalDetailsAddress} obj Optional instance to populate.
   * @return {module:model/CheckoutCreateRequestPersonalDetailsAddress} The populated <code>CheckoutCreateRequestPersonalDetailsAddress</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CheckoutCreateRequestPersonalDetailsAddress();
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('line_1'))
        obj.line1 = ApiClient.convertToType(data['line_1'], 'String');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('postal_code'))
        obj.postalCode = ApiClient.convertToType(data['postal_code'], 'Number');
    }
    return obj;
  }
}

/**
 * Payer's country
 * @member {String} country
 */
CheckoutCreateRequestPersonalDetailsAddress.prototype.country = undefined;

/**
 * Payer's city
 * @member {String} city
 */
CheckoutCreateRequestPersonalDetailsAddress.prototype.city = undefined;

/**
 * Field for address details
 * @member {String} line1
 */
CheckoutCreateRequestPersonalDetailsAddress.prototype.line1 = undefined;

/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
CheckoutCreateRequestPersonalDetailsAddress.StateEnum = {
  /**
   * value: "AC"
   * @const
   */
  AC: "AC",

  /**
   * value: "AL"
   * @const
   */
  AL: "AL",

  /**
   * value: "AP"
   * @const
   */
  AP: "AP",

  /**
   * value: "AM"
   * @const
   */
  AM: "AM",

  /**
   * value: "BA"
   * @const
   */
  BA: "BA",

  /**
   * value: "CE"
   * @const
   */
  CE: "CE",

  /**
   * value: "DF"
   * @const
   */
  DF: "DF",

  /**
   * value: "ES"
   * @const
   */
  ES: "ES",

  /**
   * value: "GO"
   * @const
   */
  GO: "GO",

  /**
   * value: "MA"
   * @const
   */
  MA: "MA",

  /**
   * value: "MT"
   * @const
   */
  MT: "MT",

  /**
   * value: "MS"
   * @const
   */
  MS: "MS",

  /**
   * value: "MG"
   * @const
   */
  MG: "MG",

  /**
   * value: "PA"
   * @const
   */
  PA: "PA",

  /**
   * value: "PB"
   * @const
   */
  PB: "PB",

  /**
   * value: "PR"
   * @const
   */
  PR: "PR",

  /**
   * value: "PE"
   * @const
   */
  PE: "PE",

  /**
   * value: "PI"
   * @const
   */
  PI: "PI",

  /**
   * value: "RJ"
   * @const
   */
  RJ: "RJ",

  /**
   * value: "RN"
   * @const
   */
  RN: "RN",

  /**
   * value: "RS"
   * @const
   */
  RS: "RS",

  /**
   * value: "RO"
   * @const
   */
  RO: "RO",

  /**
   * value: "RR"
   * @const
   */
  RR: "RR",

  /**
   * value: "SC"
   * @const
   */
  SC: "SC",

  /**
   * value: "SP"
   * @const
   */
  SP: "SP",

  /**
   * value: "SE"
   * @const
   */
  SE: "SE",

  /**
   * value: "TO"
   * @const
   */
  TO: "TO"
};
/**
 * Payer's state code
 * @member {module:model/CheckoutCreateRequestPersonalDetailsAddress.StateEnum} state
 */
CheckoutCreateRequestPersonalDetailsAddress.prototype.state = undefined;

/**
 * Payer's postal code. Must be eight digits long, however an optional dash could be applied after the 5th digit (<a href=\"https://en.wikipedia.org/wiki/List_of_postal_codes_in_Brazil\" target=\"_blank\">more information about the format available here</a>). Both options are accepted as correct.
 * @member {Number} postalCode
 */
CheckoutCreateRequestPersonalDetailsAddress.prototype.postalCode = undefined;

