/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The InlineResponse200 model module.
 * @module model/InlineResponse200
 * @version 1.0.0
 */
export class InlineResponse200 {
  /**
   * Constructs a new <code>InlineResponse200</code>.
   * @alias module:model/InlineResponse200
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse200</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse200} obj Optional instance to populate.
   * @return {module:model/InlineResponse200} The populated <code>InlineResponse200</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse200();
      if (data.hasOwnProperty('access_token'))
        obj.accessToken = ApiClient.convertToType(data['access_token'], 'String');
      if (data.hasOwnProperty('tokent_type'))
        obj.tokentType = ApiClient.convertToType(data['tokent_type'], 'String');
      if (data.hasOwnProperty('expires_in'))
        obj.expiresIn = ApiClient.convertToType(data['expires_in'], 'Number');
      if (data.hasOwnProperty('refresh_token'))
        obj.refreshToken = ApiClient.convertToType(data['refresh_token'], 'String');
      if (data.hasOwnProperty('scope'))
        obj.scope = ApiClient.convertToType(data['scope'], 'String');
    }
    return obj;
  }
}

/**
 * The access token that you need to use in your requests to the SumUp API.
 * @member {String} accessToken
 */
InlineResponse200.prototype.accessToken = undefined;

/**
 * The type of the token. The value is always `Bearer`.
 * @member {String} tokentType
 */
InlineResponse200.prototype.tokentType = undefined;

/**
 * The validity of the access token in seconds.
 * @member {Number} expiresIn
 */
InlineResponse200.prototype.expiresIn = undefined;

/**
 * The refresh token provided in the request call
 * @member {String} refreshToken
 */
InlineResponse200.prototype.refreshToken = undefined;

/**
 * List of authorization scopes granted to your access token.
 * @member {String} scope
 */
InlineResponse200.prototype.scope = undefined;

