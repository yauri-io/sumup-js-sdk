/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The BankAccount model module.
 * @module model/BankAccount
 * @version 1.0.0
 */
export class BankAccount {
  /**
   * Constructs a new <code>BankAccount</code>.
   * @alias module:model/BankAccount
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>BankAccount</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BankAccount} obj Optional instance to populate.
   * @return {module:model/BankAccount} The populated <code>BankAccount</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new BankAccount();
      if (data.hasOwnProperty('bank_code'))
        obj.bankCode = ApiClient.convertToType(data['bank_code'], 'String');
      if (data.hasOwnProperty('branch_code'))
        obj.branchCode = ApiClient.convertToType(data['branch_code'], 'String');
      if (data.hasOwnProperty('swift'))
        obj.swift = ApiClient.convertToType(data['swift'], 'String');
      if (data.hasOwnProperty('account_number'))
        obj.accountNumber = ApiClient.convertToType(data['account_number'], 'String');
      if (data.hasOwnProperty('iban'))
        obj.iban = ApiClient.convertToType(data['iban'], 'String');
      if (data.hasOwnProperty('account_type'))
        obj.accountType = ApiClient.convertToType(data['account_type'], 'String');
      if (data.hasOwnProperty('account_category'))
        obj.accountCategory = ApiClient.convertToType(data['account_category'], 'String');
      if (data.hasOwnProperty('account_holder_name'))
        obj.accountHolderName = ApiClient.convertToType(data['account_holder_name'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('primary'))
        obj.primary = ApiClient.convertToType(data['primary'], 'Boolean');
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'String');
      if (data.hasOwnProperty('bank_name'))
        obj.bankName = ApiClient.convertToType(data['bank_name'], 'String');
    }
    return obj;
  }
}

/**
 * Bank code
 * @member {String} bankCode
 */
BankAccount.prototype.bankCode = undefined;

/**
 * Branch code
 * @member {String} branchCode
 */
BankAccount.prototype.branchCode = undefined;

/**
 * SWIFT code
 * @member {String} swift
 */
BankAccount.prototype.swift = undefined;

/**
 * Account number
 * @member {String} accountNumber
 */
BankAccount.prototype.accountNumber = undefined;

/**
 * IBAN
 * @member {String} iban
 */
BankAccount.prototype.iban = undefined;

/**
 * Type of the account
 * @member {String} accountType
 */
BankAccount.prototype.accountType = undefined;

/**
 * Account category - business or personal
 * @member {String} accountCategory
 */
BankAccount.prototype.accountCategory = undefined;

/**
 * @member {String} accountHolderName
 */
BankAccount.prototype.accountHolderName = undefined;

/**
 * Status in the verification process
 * @member {String} status
 */
BankAccount.prototype.status = undefined;

/**
 * The primary bank account is the one used for settlemnts
 * @member {Boolean} primary
 */
BankAccount.prototype.primary = undefined;

/**
 * Creation date of the bank account
 * @member {String} createdAt
 */
BankAccount.prototype.createdAt = undefined;

/**
 * Bank name
 * @member {String} bankName
 */
BankAccount.prototype.bankName = undefined;

