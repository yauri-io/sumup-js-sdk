/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The MerchantSettings model module.
 * @module model/MerchantSettings
 * @version 1.0.0
 */
export class MerchantSettings {
  /**
   * Constructs a new <code>MerchantSettings</code>.
   * Merchant settings &amp;#40;like \\\&quot;payout_type\\\&quot;, \\\&quot;payout_period\\\&quot;&amp;#41;
   * @alias module:model/MerchantSettings
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>MerchantSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MerchantSettings} obj Optional instance to populate.
   * @return {module:model/MerchantSettings} The populated <code>MerchantSettings</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MerchantSettings();
      if (data.hasOwnProperty('tax_enabled'))
        obj.taxEnabled = ApiClient.convertToType(data['tax_enabled'], 'Boolean');
      if (data.hasOwnProperty('payout_type'))
        obj.payoutType = ApiClient.convertToType(data['payout_type'], 'String');
      if (data.hasOwnProperty('payout_period'))
        obj.payoutPeriod = ApiClient.convertToType(data['payout_period'], 'String');
      if (data.hasOwnProperty('payout_on_demand_available'))
        obj.payoutOnDemandAvailable = ApiClient.convertToType(data['payout_on_demand_available'], 'Boolean');
      if (data.hasOwnProperty('payout_on_demand'))
        obj.payoutOnDemand = ApiClient.convertToType(data['payout_on_demand'], 'Boolean');
      if (data.hasOwnProperty('printers_enabled'))
        obj.printersEnabled = ApiClient.convertToType(data['printers_enabled'], 'Boolean');
      if (data.hasOwnProperty('payout_instrument'))
        obj.payoutInstrument = ApiClient.convertToType(data['payout_instrument'], 'String');
      if (data.hasOwnProperty('moto_payment'))
        obj.motoPayment = ApiClient.convertToType(data['moto_payment'], 'String');
      if (data.hasOwnProperty('stone_merchant_code'))
        obj.stoneMerchantCode = ApiClient.convertToType(data['stone_merchant_code'], 'String');
      if (data.hasOwnProperty('adyen_merchant_code'))
        obj.adyenMerchantCode = ApiClient.convertToType(data['adyen_merchant_code'], 'String');
      if (data.hasOwnProperty('adyen_user'))
        obj.adyenUser = ApiClient.convertToType(data['adyen_user'], 'String');
      if (data.hasOwnProperty('adyen_password'))
        obj.adyenPassword = ApiClient.convertToType(data['adyen_password'], 'String');
      if (data.hasOwnProperty('adyen_company'))
        obj.adyenCompany = ApiClient.convertToType(data['adyen_company'], 'String');
      if (data.hasOwnProperty('daily_payout_email'))
        obj.dailyPayoutEmail = ApiClient.convertToType(data['daily_payout_email'], 'Boolean');
      if (data.hasOwnProperty('monthly_payout_email'))
        obj.monthlyPayoutEmail = ApiClient.convertToType(data['monthly_payout_email'], 'Boolean');
      if (data.hasOwnProperty('gross_settlement'))
        obj.grossSettlement = ApiClient.convertToType(data['gross_settlement'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Whether to show tax in receipts &#40;saved per transaction&#41;
 * @member {Boolean} taxEnabled
 */
MerchantSettings.prototype.taxEnabled = undefined;

/**
 * Payout type
 * @member {String} payoutType
 */
MerchantSettings.prototype.payoutType = undefined;

/**
 * Payout frequency
 * @member {String} payoutPeriod
 */
MerchantSettings.prototype.payoutPeriod = undefined;

/**
 * Whether merchant can edit payouts on demand
 * @member {Boolean} payoutOnDemandAvailable
 */
MerchantSettings.prototype.payoutOnDemandAvailable = undefined;

/**
 * Whether merchant will receive payouts on demand
 * @member {Boolean} payoutOnDemand
 */
MerchantSettings.prototype.payoutOnDemand = undefined;

/**
 * Whether to show printers in mobile app
 * @member {Boolean} printersEnabled
 */
MerchantSettings.prototype.printersEnabled = undefined;

/**
 * Payout Instrument
 * @member {String} payoutInstrument
 */
MerchantSettings.prototype.payoutInstrument = undefined;

/**
 * Allowed values for the <code>motoPayment</code> property.
 * @enum {String}
 * @readonly
 */
MerchantSettings.MotoPaymentEnum = {
  /**
   * value: "UNAVAILABLE"
   * @const
   */
  UNAVAILABLE: "UNAVAILABLE",

  /**
   * value: "ENFORCED"
   * @const
   */
  ENFORCED: "ENFORCED",

  /**
   * value: "ON"
   * @const
   */
  ON: "ON",

  /**
   * value: "OFF"
   * @const
   */
  OFF: "OFF"
};
/**
 * Whether merchant can make MOTO payments
 * @member {module:model/MerchantSettings.MotoPaymentEnum} motoPayment
 */
MerchantSettings.prototype.motoPayment = undefined;

/**
 * Stone merchant code
 * @member {String} stoneMerchantCode
 */
MerchantSettings.prototype.stoneMerchantCode = undefined;

/**
 * Adyen merchant code
 * @member {String} adyenMerchantCode
 */
MerchantSettings.prototype.adyenMerchantCode = undefined;

/**
 * Adyen username
 * @member {String} adyenUser
 */
MerchantSettings.prototype.adyenUser = undefined;

/**
 * Adyen password
 * @member {String} adyenPassword
 */
MerchantSettings.prototype.adyenPassword = undefined;

/**
 * Adyen company
 * @member {String} adyenCompany
 */
MerchantSettings.prototype.adyenCompany = undefined;

/**
 * Whether merchant will receive daily payout emails
 * @member {Boolean} dailyPayoutEmail
 */
MerchantSettings.prototype.dailyPayoutEmail = undefined;

/**
 * Whether merchant will receive monthly payout emails
 * @member {Boolean} monthlyPayoutEmail
 */
MerchantSettings.prototype.monthlyPayoutEmail = undefined;

/**
 * Whether merchant has gross settlement enabled
 * @member {Boolean} grossSettlement
 */
MerchantSettings.prototype.grossSettlement = undefined;

