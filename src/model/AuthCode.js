/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The AuthCode model module.
 * @module model/AuthCode
 * @version 1.0.0
 */
export class AuthCode {
  /**
   * Constructs a new <code>AuthCode</code>.
   * Authorization code flow
   * @alias module:model/AuthCode
   * @class
   * @param responseType {String} The type of the expected response. The value must be `code` to indicate that you expect to receive an authorization code.
   * @param clientId {String} The client ID of your application that was generated when you <a href=\"https://developer.sumup.com/docs/register-app/\" target=\"_blank\">registered it</a>.
   * @param redirectUri {String} The URI to which the merchant user is redirected after authorizing your application to access their user's account data and to which the authorization code is sent. The value must match exactly one of the <a href=\"https://developer.sumup.com/docs/register-app#3-create-oauth-client-credentials\" target=\"_blank\">registered URIs</a> for your application.
   */
  constructor(responseType, clientId, redirectUri) {
    this.responseType = responseType;
    this.clientId = clientId;
    this.redirectUri = redirectUri;
  }

  /**
   * Constructs a <code>AuthCode</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AuthCode} obj Optional instance to populate.
   * @return {module:model/AuthCode} The populated <code>AuthCode</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AuthCode();
      if (data.hasOwnProperty('response_type'))
        obj.responseType = ApiClient.convertToType(data['response_type'], 'String');
      if (data.hasOwnProperty('client_id'))
        obj.clientId = ApiClient.convertToType(data['client_id'], 'String');
      if (data.hasOwnProperty('redirect_uri'))
        obj.redirectUri = ApiClient.convertToType(data['redirect_uri'], 'String');
      if (data.hasOwnProperty('scope'))
        obj.scope = ApiClient.convertToType(data['scope'], 'String');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
    }
    return obj;
  }
}

/**
 * The type of the expected response. The value must be `code` to indicate that you expect to receive an authorization code.
 * @member {String} responseType
 */
AuthCode.prototype.responseType = undefined;

/**
 * The client ID of your application that was generated when you <a href=\"https://developer.sumup.com/docs/register-app/\" target=\"_blank\">registered it</a>.
 * @member {String} clientId
 */
AuthCode.prototype.clientId = undefined;

/**
 * The URI to which the merchant user is redirected after authorizing your application to access their user's account data and to which the authorization code is sent. The value must match exactly one of the <a href=\"https://developer.sumup.com/docs/register-app#3-create-oauth-client-credentials\" target=\"_blank\">registered URIs</a> for your application.
 * @member {String} redirectUri
 */
AuthCode.prototype.redirectUri = undefined;

/**
 * A space-separated list of scopes for which you request authorization. If you don't specify any scopes in the request, your application will be granted authorization for the default scopes.
 * @member {String} scope
 */
AuthCode.prototype.scope = undefined;

/**
 * A unique local state that can be used for correlating requests and responses and for preventing <a href=\"https://tools.ietf.org/html/rfc6749#section-10.12\" targer=\"_blank\">cross-site request forgery</a>.
 * @member {String} state
 */
AuthCode.prototype.state = undefined;

