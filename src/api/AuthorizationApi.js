/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {AuthToken} from '../model/AuthToken';
import {Error} from '../model/Error';
import {InlineResponse200} from '../model/InlineResponse200';

/**
* Authorization service.
* @module api/AuthorizationApi
* @version 1.0.0
*/
export class AuthorizationApi {

    /**
    * Constructs a new AuthorizationApi. 
    * @alias module:api/AuthorizationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the authorizeGet operation.
     * @callback moduleapi/AuthorizationApi~authorizeGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request authorization from users
     * Request authorization from users and grant your application access to resources associated with the user&#x27;s account. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.responseType The type of the expected response. The value must be &#x60;code&#x60; to indicate that you expect to receive an authorization code.
     * @param {String} opts.clientId The client ID of your application that was generated when you &lt;a href&#x3D;\&quot;https://developer.sumup.com/docs/register-app/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;registered it&lt;/a&gt;.
     * @param {String} opts.redirectUri The URI to which the merchant user is redirected after authorizing your application to access their user&#x27;s account data and to which the authorization code is sent. The value must match exactly one of the &lt;a href&#x3D;\&quot;https://developer.sumup.com/docs/register-app#3-create-oauth-client-credentials\&quot; target&#x3D;\&quot;_blank\&quot;&gt;registered URIs&lt;/a&gt; for your application.
     * @param {String} opts.scope A space-separated list of scopes for which you request authorization. If you don&#x27;t specify any scopes in the request, your application will be granted authorization for the default scopes.
     * @param {String} opts.state A unique local state that can be used for correlating requests and responses and for preventing &lt;a href&#x3D;\&quot;https://tools.ietf.org/html/rfc6749#section-10.12\&quot; targer&#x3D;\&quot;_blank\&quot;&gt;cross-site request forgery&lt;/a&gt;.
     * @param {module:api/AuthorizationApi~authorizeGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    authorizeGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'response_type': opts['responseType'],'client_id': opts['clientId'],'redirect_uri': opts['redirectUri'],'scope': opts['scope'],'state': opts['state']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/authorize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the tokenPost operation.
     * @callback moduleapi/AuthorizationApi~tokenPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate a token
     * Generate a token or a refresh token 
     * @param {Object} opts Optional parameters
     * @param {module:model/AuthToken} opts.body 
     * @param {module:api/AuthorizationApi~tokenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tokenPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}