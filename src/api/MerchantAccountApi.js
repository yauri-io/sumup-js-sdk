/*
 * SumUp REST API
 * SumUpâ€™s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.  For testing our APIs, please <a href='https://cloud.crm.sumup.com/sumup-developers-contact-form'>contact us</a> for a test account.   When you receive your test account you can create your <a href='https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials' target='_blank'>client credentials</a> and process different requests with real payment instruments, without charging them.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {BankAccount} from '../model/BankAccount';
import {DoingBusinessAs} from '../model/DoingBusinessAs';
import {Error} from '../model/Error';
import {ErrorForbidden} from '../model/ErrorForbidden';
import {MerchantProfile} from '../model/MerchantProfile';
import {MerchantSettings} from '../model/MerchantSettings';

/**
* MerchantAccount service.
* @module api/MerchantAccountApi
* @version 1.0.0
*/
export class MerchantAccountApi {

    /**
    * Constructs a new MerchantAccountApi. 
    * @alias module:api/MerchantAccountApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the meMerchantProfileBankAccountsGet operation.
     * @callback moduleapi/MerchantAccountApi~meMerchantProfileBankAccountsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/BankAccount>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List bank accounts
     * Retrives bank accounts of the merchant.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.primary The true value will return only the primary bank account (the one used for settlements).
     * @param {module:api/MerchantAccountApi~meMerchantProfileBankAccountsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    meMerchantProfileBankAccountsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'primary': opts['primary']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [BankAccount];

      return this.apiClient.callApi(
        '/me/merchant-profile/bank-accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the meMerchantProfileDoingBusinessAsGet operation.
     * @callback moduleapi/MerchantAccountApi~meMerchantProfileDoingBusinessAsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DoingBusinessAs{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve DBA
     * Retrieves Doing Business As profile.
     * @param {module:api/MerchantAccountApi~meMerchantProfileDoingBusinessAsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    meMerchantProfileDoingBusinessAsGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DoingBusinessAs;

      return this.apiClient.callApi(
        '/me/merchant-profile/doing-business-as', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the meMerchantProfileGet operation.
     * @callback moduleapi/MerchantAccountApi~meMerchantProfileGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MerchantProfile{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a profile
     * Retrieves merchant profile data.
     * @param {module:api/MerchantAccountApi~meMerchantProfileGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    meMerchantProfileGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MerchantProfile;

      return this.apiClient.callApi(
        '/me/merchant-profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the meMerchantProfileSettingsGet operation.
     * @callback moduleapi/MerchantAccountApi~meMerchantProfileSettingsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MerchantSettings{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List settings
     * Retrieves merchant settings.
     * @param {module:api/MerchantAccountApi~meMerchantProfileSettingsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    meMerchantProfileSettingsGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['accessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MerchantSettings;

      return this.apiClient.callApi(
        '/me/merchant-profile/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}